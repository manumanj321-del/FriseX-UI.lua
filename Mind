-- Carrega Rayfield UI
local Rayfield = loadstring(game:HttpGet("https://sirius.menu/rayfield"))()
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local Camera = workspace.CurrentCamera
local Lighting = game:GetService("Lighting")
local LocalPlayer = Players.LocalPlayer
local UserInputService = game:GetService("UserInputService")

local InfiniteJumpEnabled = false
local NoclipEnabled = false

local ESP_Aimbot = {
    Config = {
        AimbotEnabled = false,
        ESPEnabled = false,
        BoxESP = false,
        NameESP = false,
        TracerESP = false,
        HealthBar = false,
        ChamsEnabled = false,
        FOVCircle = false,
        AimSmoothness = 0.15,
        FOVRadius = 80,
        FOVColor = Color3.fromRGB(255, 0, 255),
        ChamsColor = Color3.fromRGB(255, 0, 255),
        RGBMode = false,
        RGBSpeed = 0.6,
        HealthBarRGB = false,
        TargetPart = "HumanoidRootPart",
        HitboxEnabled = false,
        HitboxSize = 2,
        XRAYEnabled = false,
        XRAYTransparency = 0.2,
        ShowDistance = true,
        ShowWeapon = true,
        AmbientLighting = false,
        AmbientColor = Color3.fromRGB(255,255,255),
        AmbientBrightness = 2.5,
    },
    ESPObjects = {},
    Highlights = {},
    OriginalHitbox = {},
    XRayed = {},
    OriginalAmbient = Lighting.Ambient,
    OriginalBrightness = Lighting.Brightness,
}

local function getPart(char, prefer)
    prefer = prefer or ESP_Aimbot.Config.TargetPart
    for _, name in ipairs({prefer, "HumanoidRootPart", "UpperTorso", "Torso", "Head"}) do
        if char:FindFirstChild(name) and char[name]:IsA("BasePart") then
            return char[name]
        end
    end
    return nil
end

local function applyHitbox(player)
    local char = player.Character
    if not char then return end
    local part = getPart(char)
    if not part then return end
    ESP_Aimbot.OriginalHitbox[player] = ESP_Aimbot.OriginalHitbox[player] or {}
    if not ESP_Aimbot.OriginalHitbox[player][part.Name] then
        ESP_Aimbot.OriginalHitbox[player][part.Name] = {
            Size = part.Size,
            Transparency = part.Transparency,
            CanCollide = part.CanCollide,
            Massless = part.Massless
        }
    end
    part.Size = Vector3.new(ESP_Aimbot.Config.HitboxSize, ESP_Aimbot.Config.HitboxSize, ESP_Aimbot.Config.HitboxSize)
    part.Transparency = 0.7
    part.CanCollide = false
    part.Massless = true
end

local function resetHitbox(player)
    local char = player.Character
    if not char or not ESP_Aimbot.OriginalHitbox[player] then return end
    for partName, data in pairs(ESP_Aimbot.OriginalHitbox[player]) do
        local part = char:FindFirstChild(partName)
        if part and part:IsA("BasePart") then
            part.Size = data.Size
            part.Transparency = data.Transparency
            part.CanCollide = data.CanCollide
            part.Massless = data.Massless
        end
    end
    ESP_Aimbot.OriginalHitbox[player] = nil
end

local function updateHitboxes()
    for _, player in ipairs(Players:GetPlayers()) do
        if player ~= LocalPlayer and player.Character then
            if ESP_Aimbot.Config.HitboxEnabled then
                applyHitbox(player)
            else
                resetHitbox(player)
            end
        else
            resetHitbox(player)
        end
    end
end

local function enableXRAY(transparency)
    for _, v in ipairs(workspace:GetDescendants()) do
        if v:IsA("BasePart") and not v:IsDescendantOf(LocalPlayer.Character) then
            if not ESP_Aimbot.XRayed[v] then
                ESP_Aimbot.XRayed[v] = v.Transparency
            end
            v.LocalTransparencyModifier = transparency or ESP_Aimbot.Config.XRAYTransparency
        end
    end
end

local function disableXRAY()
    for v, orig in pairs(ESP_Aimbot.XRayed) do
        if v and v:IsA("BasePart") then
            v.LocalTransparencyModifier = orig or 0
        end
    end
    ESP_Aimbot.XRayed = {}
end

-- ESP B츼SICO EST츼TICO: Desenha um box simples na cabe칞a ou torso do player, fixo (sem anima칞칚o 3D, sem ajuste din칙mico de tamanho ou rota칞칚o)
local function createESPBox(player)
    local box, nameLabel = nil, nil
    if not ESP_Aimbot.ESPObjects[player] then
        box = Drawing.new("Square")
        box.Visible = false
        box.Color = ESP_Aimbot.Config.FOVColor
        box.Thickness = 2
        box.Filled = false
        nameLabel = Drawing.new("Text")
        nameLabel.Visible = false
        nameLabel.Size = 15
        nameLabel.Center = true
        nameLabel.Outline = true
        nameLabel.Font = 2
        nameLabel.Color = ESP_Aimbot.Config.FOVColor
        ESP_Aimbot.ESPObjects[player] = {Box = box, Name = nameLabel}
    else
        box = ESP_Aimbot.ESPObjects[player].Box
        nameLabel = ESP_Aimbot.ESPObjects[player].Name
    end
    return box, nameLabel
end

local function hideESPBox(player)
    local obj = ESP_Aimbot.ESPObjects[player]
    if obj then
        if obj.Box then obj.Box.Visible = false end
        if obj.Name then obj.Name.Visible = false end
    end
end

local function updateBasicESP()
    for _, player in ipairs(Players:GetPlayers()) do
        if player ~= LocalPlayer and player.Character and ESP_Aimbot.Config.ESPEnabled then
            local part = getPart(player.Character)
            local head = player.Character:FindFirstChild("Head")
            local box, nameLabel = createESPBox(player)
            if part then
                local pos, onscreen = Camera:WorldToViewportPoint(part.Position)
                if onscreen then
                    -- CAIXA FIXA TAMANHO PADR츾O, SEM ANIMA칂츾O (como cheats de FPS simples)
                    box.Visible = ESP_Aimbot.Config.BoxESP
                    box.Color = ESP_Aimbot.Config.FOVColor
                    box.Position = Vector2.new(pos.X - 25, pos.Y - 50) -- fixo
                    box.Size = Vector2.new(50, 100)
                    -- Nome fixo acima
                    nameLabel.Visible = ESP_Aimbot.Config.NameESP
                    nameLabel.Text = player.Name
                    nameLabel.Position = Vector2.new(pos.X, pos.Y - 55)
                    nameLabel.Color = ESP_Aimbot.Config.FOVColor
                else
                    box.Visible = false
                    nameLabel.Visible = false
                end
            else
                box.Visible = false
                nameLabel.Visible = false
            end
        else
            hideESPBox(player)
        end
    end
end

local function clearAllESPDrawing()
    for _, obj in pairs(ESP_Aimbot.ESPObjects) do
        if obj.Box then pcall(function() obj.Box:Remove() end) end
        if obj.Name then pcall(function() obj.Name:Remove() end) end
    end
    ESP_Aimbot.ESPObjects = {}
end

local function updateLighting()
    if ESP_Aimbot.Config.AmbientLighting then
        Lighting.Ambient = ESP_Aimbot.Config.AmbientColor
        Lighting.Brightness = ESP_Aimbot.Config.AmbientBrightness
    else
        Lighting.Ambient = ESP_Aimbot.OriginalAmbient
        Lighting.Brightness = ESP_Aimbot.OriginalBrightness
    end
end

RunService.RenderStepped:Connect(function()
    updateLighting()
    updateHitboxes()
    if ESP_Aimbot.Config.XRAYEnabled then
        enableXRAY(ESP_Aimbot.Config.XRAYTransparency)
    else
        disableXRAY()
    end
    updateBasicESP()
end)

Players.PlayerRemoving:Connect(function(plr)
    resetHitbox(plr)
    hideESPBox(plr)
    if ESP_Aimbot.ESPObjects[plr] then
        if ESP_Aimbot.ESPObjects[plr].Box then
            ESP_Aimbot.ESPObjects[plr].Box:Remove()
        end
        if ESP_Aimbot.ESPObjects[plr].Name then
            ESP_Aimbot.ESPObjects[plr].Name:Remove()
        end
        ESP_Aimbot.ESPObjects[plr] = nil
    end
end)

RunService.Stepped:Connect(function()
    if NoclipEnabled and LocalPlayer.Character then
        for _, v in pairs(LocalPlayer.Character:GetDescendants()) do
            if v:IsA("BasePart") then
                v.CanCollide = false
            end
        end
    end
end)

UserInputService.JumpRequest:Connect(function()
    if InfiniteJumpEnabled and LocalPlayer.Character and LocalPlayer.Character:FindFirstChildOfClass("Humanoid") then
        LocalPlayer.Character:FindFirstChildOfClass("Humanoid"):ChangeState(Enum.HumanoidStateType.Jumping)
    end
end)

local Window = Rayfield:CreateWindow({
    Name = "游깴 Scripts Heaven Loader",
    LoadingTitle = "Iniciando Scripts Heaven",
    LoadingSubtitle = "powered by LUA GOD",
    Theme = "Default",
    ConfigurationSaving = {
        Enabled = true,
        FolderName = "HeavenUILoader"
    }
})

local Tab = Window:CreateTab("ESP & Aimbot", 4483362458)
Tab:CreateToggle({Name = "ESP", CurrentValue = false, Callback = function(x) ESP_Aimbot.Config.ESPEnabled = x end})
Tab:CreateToggle({Name = "Box ESP", CurrentValue = false, Callback = function(x) ESP_Aimbot.Config.BoxESP = x end})
Tab:CreateToggle({Name = "Name ESP", CurrentValue = false, Callback = function(x) ESP_Aimbot.Config.NameESP = x end})
Tab:CreateToggle({Name = "Health Bar", CurrentValue = false, Callback = function(x) ESP_Aimbot.Config.HealthBar = x end}) -- N칚o suportado no b치sico
Tab:CreateToggle({Name = "Show Distance", CurrentValue = true, Callback = function(x) ESP_Aimbot.Config.ShowDistance = x end}) -- N칚o suportado no b치sico
Tab:CreateToggle({Name = "Show Weapon", CurrentValue = true, Callback = function(x) ESP_Aimbot.Config.ShowWeapon = x end}) -- N칚o suportado no b치sico
Tab:CreateToggle({Name = "Chams", CurrentValue = false, Callback = function(x) ESP_Aimbot.Config.ChamsEnabled = x end}) -- N칚o suportado no b치sico
Tab:CreateToggle({Name = "Aimbot", CurrentValue = false, Callback = function(x) ESP_Aimbot.Config.AimbotEnabled = x end}) -- N칚o suportado aqui
Tab:CreateSlider({Name = "FOV", Range = {10, 300}, Increment = 1, CurrentValue = 80, Callback = function(x) ESP_Aimbot.Config.FOVRadius = x end})
Tab:CreateToggle({Name = "FOV Circle", CurrentValue = false, Callback = function(x) ESP_Aimbot.Config.FOVCircle = x end}) -- N칚o usado no b치sico
Tab:CreateToggle({Name = "RGB Modo", CurrentValue = false, Callback = function(x) ESP_Aimbot.Config.RGBMode = x end}) -- N칚o usado no b치sico
Tab:CreateSlider({Name = "RGB Speed", Range = {0.05, 2}, Increment = 0.01, CurrentValue = 0.6, Callback = function(x) ESP_Aimbot.Config.RGBSpeed = x end}) -- N칚o usado no b치sico
Tab:CreateDropdown({
    Name = "Target Part",
    Options = {"HumanoidRootPart","UpperTorso","Torso","Head"},
    CurrentOption = "HumanoidRootPart",
    Callback = function(x) ESP_Aimbot.Config.TargetPart = x end
})
Tab:CreateToggle({Name = "Hitbox", CurrentValue = false, Callback = function(x) ESP_Aimbot.Config.HitboxEnabled = x end})
Tab:CreateSlider({Name = "Hitbox Size", Range = {2, 10}, Increment = 0.1, CurrentValue = 2, Callback = function(x) ESP_Aimbot.Config.HitboxSize = x end})
Tab:CreateToggle({Name = "XRAY", CurrentValue = false, Callback = function(x) ESP_Aimbot.Config.XRAYEnabled = x end})
Tab:CreateSlider({Name = "XRAY Transparency", Range = {0, 1}, Increment = 0.01, CurrentValue = 0.2, Callback = function(x) ESP_Aimbot.Config.XRAYTransparency = x end})
Tab:CreateToggle({Name = "Ilumina칞칚o Ambiente", CurrentValue = false, Callback = function(x) ESP_Aimbot.Config.AmbientLighting = x end})
Tab:CreateSlider({Name = "Brilho Ambiente", Range = {0, 10}, Increment = 0.1, CurrentValue = 2.5, Callback = function(x) ESP_Aimbot.Config.AmbientBrightness = x end})

Tab:CreateSlider({
    Name = "For칞a do Aimbot",
    Range = {0, 1},
    Increment = 0.01,
    CurrentValue = 0.15,
    Callback = function(val)
        ESP_Aimbot.Config.AimSmoothness = val
    end
})

Tab:CreateToggle({
    Name = "Noclip",
    CurrentValue = false,
    Callback = function(x)
        NoclipEnabled = x
        if not x and LocalPlayer.Character then
            for _, v in pairs(LocalPlayer.Character:GetDescendants()) do
                if v:IsA("BasePart") then
                    v.CanCollide = true
                end
            end
        end
    end
})

Tab:CreateToggle({
    Name = "Pulo Infinito",
    CurrentValue = false,
    Callback = function(x)
        InfiniteJumpEnabled = x
    end
})

-- Remove qualquer ESP antigo ao recarregar
clearAllESPDrawing()
